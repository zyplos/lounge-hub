.appContainer {
  display: flex;
  flex-direction: row;
  align-self: stretch; /* Or align-items: stretch if that was intended by sx */
  max-height: 100vh;
  height: 100vh;
  position: relative; /* Needed for absolute positioning of navToggle */
}

.navToggle {
  position: absolute;
  top: 5px;
  right: 5px;
  padding: var(--space-3); /* padding: 3 */
  background-color: var(--color-background-secondary);
  z-index: 100;
  cursor: pointer;
  display: block; /* Default for mobile: ["block", "none"] */
}

@media screen and (min-width: 40em) { /* First breakpoint from theme.ts */
  .navToggle {
    display: none; /* Hidden on larger screens */
  }
}

.hamburgerIcon,
.closeIcon { /* Common styles for toggle icons */
  display: block;
  fill: white; /* Default fill for both */
  width: 24px;
  height: 24px;
}

.navbarSectionBase { /* Base styles for the navbar section */
  display: flex; /* Default for larger screens: ["none", "flex"] then isOpen modifies for smaller */
  width: auto;
}

.navbarSectionHiddenMobile { /* Initially hidden on mobile, shown when isOpen is true */
  display: none;
}

.navbarSectionOpenMobile { /* When isOpen is true on mobile */
  display: flex;
  width: 100%;
}

.navbarSectionOpenMobile > :global(div) { /* Target direct child div of section when open (Navbar outer container) */
  width: 100%;
}


/* Media query to handle the ["none", "flex"] like behavior for navbar section */
/* On small screens, controlled by isOpen. On larger screens, always flex. */
@media screen and (max-width: calc(40em - 1px)) { /* Max width for "mobile" behavior */
  .navbarSectionBase { /* Overridden by .navbarSectionOpenMobile if isOpen */
     display: none;
  }
}


.articleContent {
  flex-grow: 1;
  overflow-y: auto;
  padding: var(--space-4); /* Default p: 4 */
}

.articleContentNoPadding {
  padding: 0;
  padding-bottom: 0; /* Explicitly set for noPadding case */
}

/* Responsive padding-bottom: pb: [4, 6] */
/* Default pb is covered by p:4. This targets larger screens for pb:6 */
@media screen and (min-width: 40em) { /* First breakpoint */
  .articleContent { /* Only if not noPadding */
    padding-bottom: var(--space-6);
  }
}

.articleContentHiddenMobile { /* When nav is open on mobile */
 display: none;
}

@media screen and (min-width: 40em) { /* On larger screens, article is always block */
  .articleContentHiddenMobile {
    display: block;
  }
  .articleContent { /* Ensure it's block on larger screens */
    display: block;
  }
}
