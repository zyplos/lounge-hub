/* Base styles for all Minecraft slots */
.minecraftSlot {
  display: inline-block;
  position: relative;
  box-sizing: content-box;
  /* Default to "normal" type dimensions */
  width: 32px;
  height: 32px;
  /* Light mode default colors */
  background-color: #8B8B8B;
  border: 2px solid #373737;
  border-right-color: #FFF;
  border-bottom-color: #FFF;
}

/* Dark mode styles for base slot */
:root[data-theme="dark"] .minecraftSlot,
:root:not([data-theme="light"]) @media (prefers-color-scheme: dark) .minecraftSlot {
  background-color: #0e0e0e;
  border: 2px solid #080808;
  border-right-color: #585858;
  border-bottom-color: #585858;
}

/* Styles for "large" type slots (previously 52px, e.g. result slots) */
.large {
  width: 52px;
  height: 52px;
}

/* Styles for "stonecutter" type slots */
.stonecutter {
  /* These override base .minecraftSlot colors but not dark mode if more specific */
  background-color: #a09172;
  border: 2px solid #e0ca9f;
  border-right-color: #544c3b;
  border-bottom-color: #544c3b;
}

/* Dark mode for stonecutter - it might not need specific dark mode if its colors are fixed */
/* If stonecutter colors are meant to be fixed regardless of theme, this isn't needed. */
/* For now, assuming stonecutter colors are theme-agnostic as per original sx. */

/* Tooltip styles */
.tooltip:before {
  content: attr(data-tooltip-name); /* Use data attribute for dynamic content */
  position: absolute;
  top: 150%;
  transform: translateY(-50%);
  left: -60%; /* This might need adjustment based on slot size */
  width: 100px; /* Fixed width, consider max-width or fit-content */
  padding: 7px;
  border-radius: 7px;
  border: 3px solid #2f0864;
  background: #1a0c1b;
  color: #fff;
  text-align: center;
  z-index: 30;
  display: none; /* Hidden by default */
  font-family: var(--font-body); /* Ensure consistent font */
  font-size: var(--font-size-1);
  line-height: var(--line-height-body);
}

.tooltip:hover:before {
  display: table; /* Or block, depending on desired behavior with width */
}

.imageContainer {
  position: absolute;
  top: 50%; /* Adjusted from 55% for better centering with 32x32px image in 32x32px slot */
  left: 50%;
  transform: translate(-50%, -50%);
  /* Image component will have its own layout props */
}

.large .imageContainer {
  /* If image size or position needs to change for large slots */
}

.amountText {
  color: white;
  position: absolute;
  bottom: 5px;
  right: 5px;
  font-family: var(--font-monospace); /* Assuming a Minecraft-like font for amount */
  font-size: var(--font-size-2); /* A bit larger for visibility */
  text-shadow: 1px 1px #000; /* Make it more readable on various item backgrounds */
}

/* Dark mode for amount text if needed, but 'white' is usually fine on dark items too */
/* :root[data-theme="dark"] .amountText { ... } */
